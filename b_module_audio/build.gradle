if (isBuildModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //指定room.schemaLocation生成的文件路径
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }
        multiDexEnabled true

    }
    packagingOptions {
        //解决编译时com.android.builder.merge.DuplicateRelativeFileException: More than one file was found with OS independent path 'META-INF/rxjava.properties'这个错误
        exclude 'META-INF/rxjava.properties'
    }
//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    sourceSets {
        main {
            if (isBuildModule.toBoolean()) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                //集成开发模式下排除debug文件夹中的所有Java文件
                java {
                    exclude 'debug/**'
                }
            }
        }
    }

    buildFeatures{
        dataBinding = true
        // for view binding :
        viewBinding = true
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    kapt rootProject.ext.dependencies["arouter-compiler"]
    kapt rootProject.ext.dependencies["room-compiler"]
//    api rootProject.ext.dependencies["qmui-lib"]
    implementation project(":c_module_commonbusiness")
    implementation project(':c_module_download')
    implementation project(':b_module_statistics')
    implementation project(':b_module_webview')
    implementation project(':c_module_music')
}
